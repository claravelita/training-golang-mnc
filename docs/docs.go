// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Clara Velita Pranolo",
            "email": "claraavelitaa@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/orders": {
            "get": {
                "description": "This endpoint for get all order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get All Order",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.JSONResponses"
                        }
                    }
                }
            },
            "post": {
                "description": "This endpoint for create new order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Create New Order",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "services",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.OrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.JSONResponses"
                        }
                    }
                }
            }
        },
        "/orders/{id}": {
            "get": {
                "description": "This endpoint for get order by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get Order by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.JSONResponses"
                        }
                    }
                }
            },
            "put": {
                "description": "This endpoint for update order by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Update Order by ID",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "services",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.OrderUpdateRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.JSONResponses"
                        }
                    }
                }
            },
            "delete": {
                "description": "This endpoint for delete order by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Delete Order by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.JSONResponses"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.ItemRequest": {
            "type": "object",
            "required": [
                "item_code"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Iphone 10X"
                },
                "item_code": {
                    "type": "string",
                    "example": "123"
                },
                "quantity": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dtos.ItemUpdateRequest": {
            "type": "object",
            "required": [
                "item_code"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Iphone 10X"
                },
                "item_code": {
                    "type": "string",
                    "example": "123"
                },
                "item_id": {
                    "type": "integer",
                    "example": 1
                },
                "quantity": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "dtos.JSONResponses": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "errors": {},
                "status": {
                    "type": "string"
                }
            }
        },
        "dtos.OrderRequest": {
            "type": "object",
            "required": [
                "customer_name",
                "ordered_at"
            ],
            "properties": {
                "customer_name": {
                    "type": "string",
                    "example": "Tom Jerry"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.ItemRequest"
                    }
                },
                "ordered_at": {
                    "type": "string",
                    "example": "2022-10-06T22:15:00+07:00"
                }
            }
        },
        "dtos.OrderUpdateRequest": {
            "type": "object",
            "required": [
                "customer_name",
                "ordered_at"
            ],
            "properties": {
                "customer_name": {
                    "type": "string",
                    "example": "Spyke Tyke"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.ItemUpdateRequest"
                    }
                },
                "ordered_at": {
                    "type": "string",
                    "example": "2019-10-09T22:15:00+07:00"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Training Golang MNC Service Api",
	Description:      "This is swagger for training golang mnc service with Hacktiv8",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
